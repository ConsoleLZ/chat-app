import FuiInputComp from '@/components/fui-input/fui-input.uvue'
import FuiButtonComp from "@/components/fui-button/fui-button.uvue"
import { catchToastText } from '@/utils/constants.uts'
import { drawCaptcha } from '@/utils/utils.uts'
import { PostLoginStore } from '@/store/index.uts'
import MessageComp from '@/components/message/index.uvue'

export default {
	components: {
		FuiInputComp,
		FuiButtonComp,
		MessageComp
	},
	data() {
		return {
			account: null, // 账号
			password: null, // 密码
			isLoading: false,
			captchaInput: null, // 输入的验证码
			captcha: null, // 验证码
		}
	},
	methods: {
		onRegister() {
			uni.navigateTo({
				url: '/pages/register/index'
			})
		},
		// 更换验证码
		onChangeCode() {
			drawCaptcha('canvas').then(res => {
				this.captcha = res
				console.log(this.captcha, 'this.captcha')
			})
		},
		// 登录
		onLogin() {
			if (this.account === null || this.password === null || this.captchaInput === null) {
				uni.showToast({
					title: '账号、密码和验证码都不能为空',
					icon: 'error'
				})
				return
			}

			if (this.captchaInput !== this.captcha) {
				uni.showToast({
					title: '验证码错误',
					icon: 'error'
				})
				this.captchaInput = null
				this.onChangeCode()
				return
			}
			this.isLoading = true

			PostLoginStore.request({
				account: this.account,
				password: this.password
			}).then(res => {
				const ok = res.data?.ok as boolean
				if (ok) {
					const token = res.data?.token as string
					uni.setStorageSync('token', token)
					uni.showToast({
						title: '登录成功',
						icon: 'success'
					})
					setTimeout(() => {
						uni.redirectTo({
							url: '/pages/index/index'
						})
					}, 1500)
				} else {
					const message = res.data?.message === null ? '账号或密码错误' : res.data?.message as string

					uni.showToast({
						title: message,
						icon: 'error'
					})

					this.captchaInput = null
					this.onChangeCode()
				}
			}).catch((error) => {
				uni.showToast({
					title: catchToastText,
					icon: 'error'
				})
			}).finally(() => {
				this.isLoading = false
			})
		},
	},
	onReady() {
		drawCaptcha('canvas').then(res => {
			this.captcha = res
			console.log(this.captcha, 'this.captcha')
		})
	}
}